{
    "name": "Voto3",
    "structs": {},
    "methods": [
        {
            "name": "inicializar_eleccion",
            "args": [
                {
                    "type": "string",
                    "name": "asset_name"
                },
                {
                    "type": "string",
                    "name": "unit_name"
                },
                {
                    "type": "uint64",
                    "name": "total"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "leer_estado_contrato",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "establecer_estado_contrato",
            "args": [
                {
                    "type": "uint64",
                    "name": "nuevo_estado"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "abrir_registro_compromisos",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "registrar_compromiso",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cerrar_registro_compromisos",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "abrir_registro_raices",
            "args": [
                {
                    "type": "uint64",
                    "name": "num_bloques"
                },
                {
                    "type": "uint64",
                    "name": "tam_bloque"
                },
                {
                    "type": "uint64",
                    "name": "tam_resto"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "registrar_raiz",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cerrar_registro_raices",
            "args": [
                {
                    "type": "string",
                    "name": "txnId_raiz"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "leer_datos_raices",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,uint64,string)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "abrir_registro_anuladores",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "registrar_anulador",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "cerrar_registro_anuladores",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 8,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "asset_id": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YXNzZXRfaWQ="
                },
                "estado_contrato": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZXN0YWRvX2NvbnRyYXRv"
                },
                "contador_compromisos": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29udGFkb3JfY29tcHJvbWlzb3M="
                },
                "contador_anuladores": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29udGFkb3JfYW51bGFkb3Jlcw=="
                },
                "contador_raices": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Y29udGFkb3JfcmFpY2Vz"
                },
                "num_bloques": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bnVtX2Jsb3F1ZXM="
                },
                "tam_bloque": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dGFtX2Jsb3F1ZQ=="
                },
                "tam_resto": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dGFtX3Jlc3Rv"
                },
                "txnId_raiz": {
                    "keyType": "AVMString",
                    "valueType": "AVMString",
                    "key": "dHhuSWRfcmFpeg=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        684,
                        701,
                        725,
                        749,
                        783,
                        811,
                        833,
                        868,
                        887,
                        914
                    ],
                    "errorMessage": "El contrato no est\u00e1 en el estado correcto"
                },
                {
                    "pc": [
                        586
                    ],
                    "errorMessage": "El contrato ya est\u00e1 inicializado"
                },
                {
                    "pc": [
                        287,
                        304,
                        321,
                        333,
                        383,
                        406,
                        423,
                        447,
                        464,
                        481,
                        493,
                        514,
                        531
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        860
                    ],
                    "errorMessage": "Solo el creador puede abrir el registro de anuladores"
                },
                {
                    "pc": [
                        677
                    ],
                    "errorMessage": "Solo el creador puede abrir el registro de compromisos"
                },
                {
                    "pc": [
                        742
                    ],
                    "errorMessage": "Solo el creador puede abrir el registro de ra\u00edces"
                },
                {
                    "pc": [
                        906
                    ],
                    "errorMessage": "Solo el creador puede cerrar el registro de anuladores"
                },
                {
                    "pc": [
                        718
                    ],
                    "errorMessage": "Solo el creador puede cerrar el registro de compromisos"
                },
                {
                    "pc": [
                        803
                    ],
                    "errorMessage": "Solo el creador puede cerrar el registro de ra\u00edces"
                },
                {
                    "pc": [
                        664
                    ],
                    "errorMessage": "Solo el creador puede establecer el estado del contrato"
                },
                {
                    "pc": [
                        580
                    ],
                    "errorMessage": "Solo el creador puede inicializar la elecci\u00f3n"
                },
                {
                    "pc": [
                        650
                    ],
                    "errorMessage": "Solo el creador puede leer el estado del contrato"
                },
                {
                    "pc": [
                        879
                    ],
                    "errorMessage": "Solo el creador puede registrar anuladores"
                },
                {
                    "pc": [
                        694
                    ],
                    "errorMessage": "Solo el creador puede registrar compromisos"
                },
                {
                    "pc": [
                        775
                    ],
                    "errorMessage": "Solo el creador puede registrar ra\u00edces"
                },
                {
                    "pc": [
                        593
                    ],
                    "errorMessage": "asset_name demasiado largo"
                },
                {
                    "pc": [
                        569
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        290,
                        307,
                        324,
                        336,
                        386,
                        409,
                        426,
                        450,
                        467,
                        484,
                        496,
                        517,
                        534
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        643
                    ],
                    "errorMessage": "check self.asset_id exists"
                },
                {
                    "pc": [
                        892,
                        923
                    ],
                    "errorMessage": "check self.contador_anuladores exists"
                },
                {
                    "pc": [
                        705,
                        732
                    ],
                    "errorMessage": "check self.contador_compromisos exists"
                },
                {
                    "pc": [
                        787,
                        824
                    ],
                    "errorMessage": "check self.contador_raices exists"
                },
                {
                    "pc": [
                        584,
                        654,
                        681,
                        698,
                        722,
                        746,
                        779,
                        807,
                        829,
                        864,
                        883,
                        910
                    ],
                    "errorMessage": "check self.estado_contrato exists"
                },
                {
                    "pc": [
                        838
                    ],
                    "errorMessage": "check self.num_bloques exists"
                },
                {
                    "pc": [
                        843
                    ],
                    "errorMessage": "check self.tam_bloque exists"
                },
                {
                    "pc": [
                        848
                    ],
                    "errorMessage": "check self.tam_resto exists"
                },
                {
                    "pc": [
                        853
                    ],
                    "errorMessage": "check self.txnId_raiz exists"
                },
                {
                    "pc": [
                        600
                    ],
                    "errorMessage": "unit_name demasiado largo"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAEAAEDAiYKD2VzdGFkb19jb250cmF0bwQVH3x1FGNvbnRhZG9yX2NvbXByb21pc29zD2NvbnRhZG9yX3JhaWNlcxNjb250YWRvcl9hbnVsYWRvcmVzCGFzc2V0X2lkC251bV9ibG9xdWVzCnRhbV9ibG9xdWUJdGFtX3Jlc3RvCnR4bklkX3JhaXoxGEAAIicFImcoImcqImcrImcnBCJnJwYiZycHImcnCCJnJwmAAGcxG0EBeYINBHdX3coEOpd4awSJSwueBMf+k8AEEJtqYQSIAp3SBNMw/RwEnBekMAQCoorVBH2bPlgEToEs9wS5vc7BBIAGeOw2GgCODQD2AOUA0ADEALMAogCKAHkAYgAwACQAEwACIkMxGRREMRhEiAJfFilMULAjQzEZFEQxGESIAjMWKUxQsCNDMRkURDEYRIgCDyNDMRkURDEYRIgB5k8DFk8DFk8DFksDFRZXBgJPBFBPA08DUE8CUIACABpQTFApTFCwI0MxGRREMRhENhoBVwIAiAGPFilMULAjQzEZFEQxGESIAWUWKUxQsCNDMRkURDEYRDYaARc2GgIXNhoDF4gBJCNDMRkURDEYRIgBAxYpTFCwI0MxGRREMRhEiADaFilMULAjQzEZFEQxGESIALgjQzEZFEQxGEQ2GgEXiACYFilMULAjQzEZFEQxGESIAHwWKUxQsCNDMRkURDEYRDYaAVcCADYaAlcCADYaAxeIABIWKUxQsCNDMRlA/uQxGBREI0OKAwExADIJEkQiKGVEFESL/RWBIA5Ei/4VgQgORLEyCkmyLLIpIrIji/+yIov+siWL/bImJLIQIrIBsycFtDxnKCNnIicFZUSJMQAyCRJEIihlRImKAQExADIJEkQoi/9ni/+JMQAyCRJEIihlRCMSRCglZ4kxADIJEkQiKGVEJRJEIiplRCMIKksBZ4kxADIJEkQiKGVEJRJEKCRnIiplRImKAwAxADIJEkQiKGVEJBJEJwaL/WcnB4v+ZycIi/9nKIEEZ4kxADIJEkQiKGVEgQQSRCIrZUQjCCtLAWeJigEBMQAyCRJEIihlRIEEEkQogQVnJwmL/2ciK2VEiSIoZUSBBQ9EIicGZUQiJwdlRCInCGVEIicJZUSJMQAyCRJEIihlRIEFEkQogQZniTEAMgkSRCIoZUSBBhJEIicEZUQjCCcESwFniTEAMgkSRCIoZUSBBhJEKIEHZyInBGVEiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 9,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}